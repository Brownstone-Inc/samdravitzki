name: deploy

on:
  workflow_call:
    inputs:
      resourceGroup:
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true

jobs:
  validate-bicep:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: azure/login@v2
        name: Sign into Azure
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - uses: azure/arm-deploy@v2
        name: Run preflight validation
        with:
          deploymentName: ${{ github.run_number }}
          template: ./iac/main.bicep
          resourceGroupName: ${{ inputs.resourceGroup }}
          deploymentMode: Validate

  deploy-infrastructure:
    runs-on: ubuntu-latest
    needs: validate-bicep
    outputs:
      appHostName: ${{ steps.deploy.outputs.staticWebAppHostName }}
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1
        name: Sign in to Azure
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - uses: azure/arm-deploy@v2
        name: Deploy infrastructure
        id: deploy
        with:
          failOnStdErr: false # required so github doesn't interpret log data as errors (only required when using custom linter configuration)
          deploymentName: ${{ github.run_number }}
          resourceGroupName: ${{ inputs.resourceGroup }}
          template: ./iac/main.bicep
          deploymentMode: Complete

  # smoke-test:
  #   runs-on: ubuntu-latest
  #   needs: deploy-infrastructure
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: |
  #         $container = New-PesterContainer `
  #           -Path 'iac/tests/StaticWebApp.Tests.ps1' `
  #           -Data @{ HostName = '${{needs.deploy-infrastructure.outputs.appHostName}}' }
  #         Invoke-Pester `
  #           -Container $container `
  #           -CI
  #       name: Run smoke tests
  #       shell: pwsh
